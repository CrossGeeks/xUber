<?xml version="1.0" encoding="UTF-8"?>
<ContentPage xmlns="http://xamarin.com/schemas/2014/forms" 
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml" 
             xmlns:local="clr-namespace:UberClone.Views"
             xmlns:helpers="clr-namespace:UberClone.Helpers"
             xmlns:controls="clr-namespace:UberClone.Controls"
             xmlns:viewModels="clr-namespace:UberClone.ViewModels"
             x:Class="UberClone.Views.MapPage" >
    <ContentPage.BindingContext>
        <viewModels:MapPageViewModel/>
    </ContentPage.BindingContext>
    <Grid RowSpacing="0"
          x:Name="layout"
          VerticalOptions="FillAndExpand"
          RowDefinitions="Auto, *">
        <Grid Grid.Row="0"
              Grid.RowSpan="2"
              ColumnSpacing="0"
              RowSpacing="0"
              RowDefinitions="*, Auto">
                    <controls:ExtendedMap  x:Name="map" 
                              Grid.Row="0"
                              HorizontalOptions="FillAndExpand"
                              CenterMapCommand="{Binding CenterMapCommand}"
                              DrawRouteCommand="{Binding DrawRouteCommand}"
                              CleanPolylineCommand="{Binding CleanPolylineCommand}"
                              CameraIdledCommand="{Binding GetLocationNameCommand}" />
            
                   <local:RecentPlaceView  
                                  Grid.Row="1"
                                  IsVisible="false">
                   <local:RecentPlaceView.Triggers>
                    <DataTrigger TargetType="local:RecentPlaceView"
                                 Binding="{Binding State}"
                                 Value="{x:Static helpers:XUberState.Initial}">
                         <Setter Property="IsVisible" Value="True"/>
                    </DataTrigger>
                </local:RecentPlaceView.Triggers>
                 </local:RecentPlaceView>
            
                  <local:PriceView IsVisible="false"
                                    Grid.Row="1">
                      <local:PriceView.Triggers>
                            <DataTrigger TargetType="local:PriceView"
                                         Binding="{Binding State}"
                                         Value="{x:Static helpers:XUberState.ChoosingRide}">
                                 <Setter Property="IsVisible" Value="True"/>    
                            </DataTrigger>
                        </local:PriceView.Triggers>
                   </local:PriceView>
        </Grid>
        
        
        <Image Source="ic_back"
               VerticalOptions="Start"
               HorizontalOptions="Start"
               IsVisible="false"
               x:Name="backButton"
               Margin="20,20,20,0"
              HeightRequest="30"
              WidthRequest="30"
              Grid.Row="0"
              Grid.RowSpan="2">
              <Image.Triggers>
                <DataTrigger TargetType="Image"
                             Binding="{Binding State}"
                             Value="{x:Static helpers:XUberState.ChoosingRide}">
                     <Setter Property="IsVisible" Value="True"/>
                </DataTrigger>
            </Image.Triggers>
            <Image.GestureRecognizers>
                    <TapGestureRecognizer Command="{Binding FireTriggerCommand}"
                                          CommandParameter="{x:Static helpers:XUberTrigger.Cancel}"/>
                </Image.GestureRecognizers>
        </Image>
        
        <Image Source="ic_menu"
               x:Name="menuIcon"
               IsVisible="false"
               VerticalOptions="Start"
               HorizontalOptions="Start"
               Margin="20,20,20,0"
               HeightRequest="30"
               WidthRequest="30"
               Grid.Row="0"
               Grid.RowSpan="2">
            <Image.Triggers>
                <DataTrigger TargetType="Image"
                             Binding="{Binding State}"
                             Value="{x:Static helpers:XUberState.Initial}">
                     <Setter Property="IsVisible" Value="True"/>
                </DataTrigger>
            </Image.Triggers>
            <Image.GestureRecognizers>
               <TapGestureRecognizer Tapped="OnMenuTapped"/>
            </Image.GestureRecognizers>
        </Image>
        
        <local:SearchHeaderView IsVisible="{Binding IsSearching}"
                                x:Name="headerSearch"
                                Grid.Row="0"/>
            
        <Image Source="ic_pickuplocation.png"
             IsVisible="false"
             HeightRequest="35"
             WidthRequest="35"
             VerticalOptions="CenterAndExpand"
             HorizontalOptions="CenterAndExpand"
             Grid.Row="0"
             Grid.RowSpan="2">
            <Image.Triggers>
                <DataTrigger TargetType="Image"
                             Binding="{Binding State}"
                             Value="{x:Static helpers:XUberState.SearchingOrigin}">
                     <Setter Property="IsVisible" Value="True"/>
                </DataTrigger>
            </Image.Triggers>
         </Image>
       
        
           <Button Text="DONE"
                   IsVisible="false"
                   BackgroundColor="Black"
                   Margin="40"
                   Clicked="OnDoneClicked"
                   x:Name="chooseLocationButton"
                   TextColor="White"
                   FontSize="17"
                   VerticalOptions="EndAndExpand"
                   HorizontalOptions="FillAndExpand"
                   Grid.Row="0"
                   Grid.RowSpan="2">
            <Button.Triggers>
                <DataTrigger TargetType="Button"
                             Binding="{Binding State}"
                             Value="{x:Static helpers:XUberState.SearchingOrigin}">
                     <Setter Property="IsVisible" Value="True"/>
                </DataTrigger>
            </Button.Triggers>
         </Button>
        
        <local:SearchContentView IsVisible="false" 
                                 Grid.Row="1" 
                                 x:Name="searchContentView">
             <local:SearchContentView.Triggers>
                <DataTrigger TargetType="local:SearchContentView"
                             Binding="{Binding State}"
                             Value="{x:Static helpers:XUberState.SearchingDestination}">
                     <Setter Property="IsVisible" Value="True"/>
                </DataTrigger>
            </local:SearchContentView.Triggers>
        </local:SearchContentView>
    </Grid>
</ContentPage>